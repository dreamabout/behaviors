<?php


    public function archive()
    {
        $archive = $this->createArchiveObject();
        $this->copyContentOn($archive);
        
        $archive->save();
        return $archive;
    }

    protected function copyContentOn($archive)
    {
        $archive->set{{ options.id_field }}($this->getId());
        $archive->set{{ options.archived_at_field }}(new \DateTime());

{% for field in config_class.fields|keys %}
        $archive->set{{ field|ucfirst }}($this->get{{ field|ucfirst }}());
{% endfor %}

{% for name, embedded in config_class.embeddedsMany %}
{% if embedded.inherited is not defined or not embedded.inherited %}
        foreach($this->get{{ name|ucfirst }}() as $key => $document) {
            $archive->add{{ name|ucfirst }}(clone $document);
        }
{% endif %}
{% endfor %}

{% for name, embedded in config_class.embeddedsOne %}
{% if embedded.inherited is not defined or not embedded.inherited %}
        if ( $document = $this->get{{ name|ucfirst }}() ) {
            $archive->set{{ name|ucfirst }}(clone $document);
        }
{% endif %}
{% endfor %}

        return $archive;
    }

    protected function createArchiveObject()
    {
        return $this->getMongator()->create('{{ extension.archiveClass }}');
    }

