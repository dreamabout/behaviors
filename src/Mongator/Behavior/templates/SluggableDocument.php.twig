<?php

    protected function updateSluggableSlug()
    {
        if ( $this->get{{ options.slugField|ucfirst }}() !== null ) return true;
        if ( $this->generateSlug() == '' ) return true;

        $slug = $proposal = $this->generateSlug();

{% if options.unique %}
        $try = 1;
        while($this->slugExists($slug)) {
            $slug = $proposal . '-' . ++$try;
        }
{% endif %}

        $this->set{{ options.slugField|ucfirst }}($slug);
    }

    protected function generateSlug()
    {
{% if options.fromToString == true %}
        $slug = (string) $this;
{% else %}
        $slug = $this->get{{ options.fromField|ucfirst }}();
{% endif %}

        return call_user_func({{ options.builder|var_export }}, $slug);
    }

{% if options.unique %}
    protected function slugExists($slug)
    {
{% if options.unique == 'local' %}
        $repository = $this->getRepository();
{% elseif options.unique == 'global' %}
        $repository = $this->getMongator()->getRepository('{{ options.slugClass }}');
{% endif %}

        return (boolean) $repository->getCollection()->findOne(
            array('{{ options.slugField }}' => $slug),
            array('{{ options.slugField }}' => 1)
        );
    }
{% endif %}


{% if options.unique == 'global' %}
    protected function insertSlugInCollection()
    {
        if ( $this->get{{ options.slugField|ucfirst }}() === null ) return true;
        if ( $this->slugExists($this->get{{ options.slugField|ucfirst }}()) ) return true;

        $slugDocument = $this->getMongator()->create('{{ options.slugClass }}');
        $slugDocument->setSlug($this->get{{ options.slugField|ucfirst }}());
        $slugDocument->setDocument($this);
        $slugDocument->save();
    }
{% endif %}
